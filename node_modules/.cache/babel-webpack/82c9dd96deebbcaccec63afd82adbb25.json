{"ast":null,"code":"import * as i0 from '@angular/core';\nimport { EventEmitter, Component, ChangeDetectionStrategy, ViewEncapsulation, Input, Output, NgModule } from '@angular/core';\nimport * as i1 from '@angular/common';\nimport { CommonModule } from '@angular/common';\n\nfunction Chip_div_0_img_2_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelement(0, \"img\", 6);\n  }\n\n  if (rf & 2) {\n    const ctx_r1 = i0.ɵɵnextContext(2);\n    i0.ɵɵproperty(\"src\", ctx_r1.image, i0.ɵɵsanitizeUrl);\n  }\n}\n\nfunction Chip_div_0_ng_template_3_span_0_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelement(0, \"span\", 8);\n  }\n\n  if (rf & 2) {\n    const ctx_r6 = i0.ɵɵnextContext(3);\n    i0.ɵɵclassMap(ctx_r6.icon);\n    i0.ɵɵproperty(\"ngClass\", \"p-chip-icon\");\n  }\n}\n\nfunction Chip_div_0_ng_template_3_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵtemplate(0, Chip_div_0_ng_template_3_span_0_Template, 1, 3, \"span\", 7);\n  }\n\n  if (rf & 2) {\n    const ctx_r3 = i0.ɵɵnextContext(2);\n    i0.ɵɵproperty(\"ngIf\", ctx_r3.icon);\n  }\n}\n\nfunction Chip_div_0_div_5_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 9);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const ctx_r4 = i0.ɵɵnextContext(2);\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate(ctx_r4.label);\n  }\n}\n\nfunction Chip_div_0_span_6_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r8 = i0.ɵɵgetCurrentView();\n\n    i0.ɵɵelementStart(0, \"span\", 10);\n    i0.ɵɵlistener(\"click\", function Chip_div_0_span_6_Template_span_click_0_listener($event) {\n      i0.ɵɵrestoreView(_r8);\n      const ctx_r7 = i0.ɵɵnextContext(2);\n      return ctx_r7.close($event);\n    })(\"keydown.enter\", function Chip_div_0_span_6_Template_span_keydown_enter_0_listener($event) {\n      i0.ɵɵrestoreView(_r8);\n      const ctx_r9 = i0.ɵɵnextContext(2);\n      return ctx_r9.close($event);\n    });\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const ctx_r5 = i0.ɵɵnextContext(2);\n    i0.ɵɵclassMap(ctx_r5.removeIcon);\n    i0.ɵɵproperty(\"ngClass\", \"pi-chip-remove-icon\");\n  }\n}\n\nfunction Chip_div_0_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 1);\n    i0.ɵɵprojection(1);\n    i0.ɵɵtemplate(2, Chip_div_0_img_2_Template, 1, 1, \"img\", 2);\n    i0.ɵɵtemplate(3, Chip_div_0_ng_template_3_Template, 1, 1, \"ng-template\", null, 3, i0.ɵɵtemplateRefExtractor);\n    i0.ɵɵtemplate(5, Chip_div_0_div_5_Template, 2, 1, \"div\", 4);\n    i0.ɵɵtemplate(6, Chip_div_0_span_6_Template, 1, 3, \"span\", 5);\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const _r2 = i0.ɵɵreference(4);\n\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵclassMap(ctx_r0.styleClass);\n    i0.ɵɵproperty(\"ngClass\", ctx_r0.containerClass())(\"ngStyle\", ctx_r0.style);\n    i0.ɵɵadvance(2);\n    i0.ɵɵproperty(\"ngIf\", ctx_r0.image)(\"ngIfElse\", _r2);\n    i0.ɵɵadvance(3);\n    i0.ɵɵproperty(\"ngIf\", ctx_r0.label);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r0.removable);\n  }\n}\n\nconst _c0 = [\"*\"];\n\nclass Chip {\n  constructor() {\n    this.removeIcon = \"pi pi-times-circle\";\n    this.onRemove = new EventEmitter();\n    this.visible = true;\n  }\n\n  containerClass() {\n    return {\n      'p-chip p-component': true,\n      'p-chip-image': this.image != null\n    };\n  }\n\n  close(event) {\n    this.visible = false;\n    this.onRemove.emit(event);\n  }\n\n}\n\nChip.ɵfac = function Chip_Factory(t) {\n  return new (t || Chip)();\n};\n\nChip.ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n  type: Chip,\n  selectors: [[\"p-chip\"]],\n  inputs: {\n    label: \"label\",\n    icon: \"icon\",\n    image: \"image\",\n    style: \"style\",\n    styleClass: \"styleClass\",\n    removable: \"removable\",\n    removeIcon: \"removeIcon\"\n  },\n  outputs: {\n    onRemove: \"onRemove\"\n  },\n  ngContentSelectors: _c0,\n  decls: 1,\n  vars: 1,\n  consts: [[3, \"ngClass\", \"class\", \"ngStyle\", 4, \"ngIf\"], [3, \"ngClass\", \"ngStyle\"], [3, \"src\", 4, \"ngIf\", \"ngIfElse\"], [\"iconTemplate\", \"\"], [\"class\", \"p-chip-text\", 4, \"ngIf\"], [\"tabindex\", \"0\", 3, \"class\", \"ngClass\", \"click\", \"keydown.enter\", 4, \"ngIf\"], [3, \"src\"], [3, \"class\", \"ngClass\", 4, \"ngIf\"], [3, \"ngClass\"], [1, \"p-chip-text\"], [\"tabindex\", \"0\", 3, \"ngClass\", \"click\", \"keydown.enter\"]],\n  template: function Chip_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵprojectionDef();\n      i0.ɵɵtemplate(0, Chip_div_0_Template, 7, 8, \"div\", 0);\n    }\n\n    if (rf & 2) {\n      i0.ɵɵproperty(\"ngIf\", ctx.visible);\n    }\n  },\n  directives: [i1.NgIf, i1.NgClass, i1.NgStyle],\n  styles: [\".p-chip{display:inline-flex;align-items:center}.p-chip-icon.pi,.p-chip-text{line-height:1.5}.pi-chip-remove-icon{line-height:1.5;cursor:pointer}.p-chip img{border-radius:50%}\"],\n  encapsulation: 2,\n  changeDetection: 0\n});\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(Chip, [{\n    type: Component,\n    args: [{\n      selector: 'p-chip',\n      template: `\n        <div [ngClass]=\"containerClass()\" [class]=\"styleClass\" [ngStyle]=\"style\" *ngIf=\"visible\">\n            <ng-content></ng-content>\n            <img [src]=\"image\" *ngIf=\"image;else iconTemplate\">\n            <ng-template #iconTemplate><span *ngIf=\"icon\" [class]=\"icon\" [ngClass]=\"'p-chip-icon'\"></span></ng-template>\n            <div class=\"p-chip-text\" *ngIf=\"label\">{{label}}</div>\n            <span *ngIf=\"removable\" tabindex=\"0\" [class]=\"removeIcon\" [ngClass]=\"'pi-chip-remove-icon'\" (click)=\"close($event)\" (keydown.enter)=\"close($event)\"></span>\n        </div>\n    `,\n      changeDetection: ChangeDetectionStrategy.OnPush,\n      encapsulation: ViewEncapsulation.None,\n      styleUrls: ['./chip.css']\n    }]\n  }], null, {\n    label: [{\n      type: Input\n    }],\n    icon: [{\n      type: Input\n    }],\n    image: [{\n      type: Input\n    }],\n    style: [{\n      type: Input\n    }],\n    styleClass: [{\n      type: Input\n    }],\n    removable: [{\n      type: Input\n    }],\n    removeIcon: [{\n      type: Input\n    }],\n    onRemove: [{\n      type: Output\n    }]\n  });\n})();\n\nclass ChipModule {}\n\nChipModule.ɵfac = function ChipModule_Factory(t) {\n  return new (t || ChipModule)();\n};\n\nChipModule.ɵmod = /* @__PURE__ */i0.ɵɵdefineNgModule({\n  type: ChipModule\n});\nChipModule.ɵinj = /* @__PURE__ */i0.ɵɵdefineInjector({\n  imports: [[CommonModule]]\n});\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(ChipModule, [{\n    type: NgModule,\n    args: [{\n      imports: [CommonModule],\n      exports: [Chip],\n      declarations: [Chip]\n    }]\n  }], null, null);\n})();\n/**\n * Generated bundle index. Do not edit.\n */\n\n\nexport { Chip, ChipModule }; //# sourceMappingURL=primeng-chip.js.map","map":{"version":3,"sources":["/Users/fazozela/Desktop/ProyectoTecba/TecbaUserProjectV1/node_modules/primeng/fesm2015/primeng-chip.js"],"names":["i0","EventEmitter","Component","ChangeDetectionStrategy","ViewEncapsulation","Input","Output","NgModule","i1","CommonModule","Chip","constructor","removeIcon","onRemove","visible","containerClass","image","close","event","emit","ɵfac","ɵcmp","NgIf","NgClass","NgStyle","type","args","selector","template","changeDetection","OnPush","encapsulation","None","styleUrls","label","icon","style","styleClass","removable","ChipModule","ɵmod","ɵinj","imports","exports","declarations"],"mappings":"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","sourcesContent":["import * as i0 from '@angular/core';\nimport { EventEmitter, Component, ChangeDetectionStrategy, ViewEncapsulation, Input, Output, NgModule } from '@angular/core';\nimport * as i1 from '@angular/common';\nimport { CommonModule } from '@angular/common';\n\nclass Chip {\n    constructor() {\n        this.removeIcon = \"pi pi-times-circle\";\n        this.onRemove = new EventEmitter();\n        this.visible = true;\n    }\n    containerClass() {\n        return {\n            'p-chip p-component': true,\n            'p-chip-image': this.image != null\n        };\n    }\n    close(event) {\n        this.visible = false;\n        this.onRemove.emit(event);\n    }\n}\nChip.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"12.0.5\", ngImport: i0, type: Chip, deps: [], target: i0.ɵɵFactoryTarget.Component });\nChip.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"12.0.0\", version: \"12.0.5\", type: Chip, selector: \"p-chip\", inputs: { label: \"label\", icon: \"icon\", image: \"image\", style: \"style\", styleClass: \"styleClass\", removable: \"removable\", removeIcon: \"removeIcon\" }, outputs: { onRemove: \"onRemove\" }, ngImport: i0, template: `\n        <div [ngClass]=\"containerClass()\" [class]=\"styleClass\" [ngStyle]=\"style\" *ngIf=\"visible\">\n            <ng-content></ng-content>\n            <img [src]=\"image\" *ngIf=\"image;else iconTemplate\">\n            <ng-template #iconTemplate><span *ngIf=\"icon\" [class]=\"icon\" [ngClass]=\"'p-chip-icon'\"></span></ng-template>\n            <div class=\"p-chip-text\" *ngIf=\"label\">{{label}}</div>\n            <span *ngIf=\"removable\" tabindex=\"0\" [class]=\"removeIcon\" [ngClass]=\"'pi-chip-remove-icon'\" (click)=\"close($event)\" (keydown.enter)=\"close($event)\"></span>\n        </div>\n    `, isInline: true, styles: [\".p-chip{display:inline-flex;align-items:center}.p-chip-icon.pi,.p-chip-text{line-height:1.5}.pi-chip-remove-icon{line-height:1.5;cursor:pointer}.p-chip img{border-radius:50%}\"], directives: [{ type: i1.NgIf, selector: \"[ngIf]\", inputs: [\"ngIf\", \"ngIfThen\", \"ngIfElse\"] }, { type: i1.NgClass, selector: \"[ngClass]\", inputs: [\"class\", \"ngClass\"] }, { type: i1.NgStyle, selector: \"[ngStyle]\", inputs: [\"ngStyle\"] }], changeDetection: i0.ChangeDetectionStrategy.OnPush, encapsulation: i0.ViewEncapsulation.None });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"12.0.5\", ngImport: i0, type: Chip, decorators: [{\n            type: Component,\n            args: [{\n                    selector: 'p-chip',\n                    template: `\n        <div [ngClass]=\"containerClass()\" [class]=\"styleClass\" [ngStyle]=\"style\" *ngIf=\"visible\">\n            <ng-content></ng-content>\n            <img [src]=\"image\" *ngIf=\"image;else iconTemplate\">\n            <ng-template #iconTemplate><span *ngIf=\"icon\" [class]=\"icon\" [ngClass]=\"'p-chip-icon'\"></span></ng-template>\n            <div class=\"p-chip-text\" *ngIf=\"label\">{{label}}</div>\n            <span *ngIf=\"removable\" tabindex=\"0\" [class]=\"removeIcon\" [ngClass]=\"'pi-chip-remove-icon'\" (click)=\"close($event)\" (keydown.enter)=\"close($event)\"></span>\n        </div>\n    `,\n                    changeDetection: ChangeDetectionStrategy.OnPush,\n                    encapsulation: ViewEncapsulation.None,\n                    styleUrls: ['./chip.css']\n                }]\n        }], propDecorators: { label: [{\n                type: Input\n            }], icon: [{\n                type: Input\n            }], image: [{\n                type: Input\n            }], style: [{\n                type: Input\n            }], styleClass: [{\n                type: Input\n            }], removable: [{\n                type: Input\n            }], removeIcon: [{\n                type: Input\n            }], onRemove: [{\n                type: Output\n            }] } });\nclass ChipModule {\n}\nChipModule.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"12.0.5\", ngImport: i0, type: ChipModule, deps: [], target: i0.ɵɵFactoryTarget.NgModule });\nChipModule.ɵmod = i0.ɵɵngDeclareNgModule({ minVersion: \"12.0.0\", version: \"12.0.5\", ngImport: i0, type: ChipModule, declarations: [Chip], imports: [CommonModule], exports: [Chip] });\nChipModule.ɵinj = i0.ɵɵngDeclareInjector({ minVersion: \"12.0.0\", version: \"12.0.5\", ngImport: i0, type: ChipModule, imports: [[CommonModule]] });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"12.0.5\", ngImport: i0, type: ChipModule, decorators: [{\n            type: NgModule,\n            args: [{\n                    imports: [CommonModule],\n                    exports: [Chip],\n                    declarations: [Chip]\n                }]\n        }] });\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { Chip, ChipModule };\n//# sourceMappingURL=primeng-chip.js.map\n"]},"metadata":{},"sourceType":"module"}