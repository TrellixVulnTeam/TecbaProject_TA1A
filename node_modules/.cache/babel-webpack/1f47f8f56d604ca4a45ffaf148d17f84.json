{"ast":null,"code":"import * as i0 from '@angular/core';\nimport { Injectable, Component, ChangeDetectionStrategy, ViewEncapsulation, Input, NgModule } from '@angular/core';\nimport * as i3 from '@angular/forms';\nimport { FormsModule } from '@angular/forms';\nimport * as i2 from '@angular/common';\nimport { CommonModule } from '@angular/common';\nimport { DomHandler } from 'primeng/dom';\nimport { Subject } from 'rxjs';\n\nfunction Terminal_div_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\");\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate(ctx_r0.welcomeMessage);\n  }\n}\n\nfunction Terminal_div_3_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\");\n    i0.ɵɵelementStart(1, \"span\", 8);\n    i0.ɵɵtext(2);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(3, \"span\", 9);\n    i0.ɵɵtext(4);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(5, \"div\", 10);\n    i0.ɵɵtext(6);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const command_r3 = ctx.$implicit;\n    const ctx_r1 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(ctx_r1.prompt);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(command_r3.text);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(command_r3.response);\n  }\n}\n\nclass TerminalService {\n  constructor() {\n    this.commandSource = new Subject();\n    this.responseSource = new Subject();\n    this.commandHandler = this.commandSource.asObservable();\n    this.responseHandler = this.responseSource.asObservable();\n  }\n\n  sendCommand(command) {\n    if (command) {\n      this.commandSource.next(command);\n    }\n  }\n\n  sendResponse(response) {\n    if (response) {\n      this.responseSource.next(response);\n    }\n  }\n\n}\n\nTerminalService.ɵfac = function TerminalService_Factory(t) {\n  return new (t || TerminalService)();\n};\n\nTerminalService.ɵprov = /* @__PURE__ */i0.ɵɵdefineInjectable({\n  token: TerminalService,\n  factory: TerminalService.ɵfac\n});\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(TerminalService, [{\n    type: Injectable\n  }], null, null);\n})();\n\nclass Terminal {\n  constructor(el, terminalService, cd) {\n    this.el = el;\n    this.terminalService = terminalService;\n    this.cd = cd;\n    this.commands = [];\n    this.subscription = terminalService.responseHandler.subscribe(response => {\n      this.commands[this.commands.length - 1].response = response;\n      this.commandProcessed = true;\n    });\n  }\n\n  ngAfterViewInit() {\n    this.container = DomHandler.find(this.el.nativeElement, '.p-terminal')[0];\n  }\n\n  ngAfterViewChecked() {\n    if (this.commandProcessed) {\n      this.container.scrollTop = this.container.scrollHeight;\n      this.commandProcessed = false;\n    }\n  }\n\n  set response(value) {\n    if (value) {\n      this.commands[this.commands.length - 1].response = value;\n      this.commandProcessed = true;\n    }\n  }\n\n  handleCommand(event) {\n    if (event.keyCode == 13) {\n      this.commands.push({\n        text: this.command\n      });\n      this.terminalService.sendCommand(this.command);\n      this.command = '';\n    }\n  }\n\n  focus(element) {\n    element.focus();\n  }\n\n  ngOnDestroy() {\n    if (this.subscription) {\n      this.subscription.unsubscribe();\n    }\n  }\n\n}\n\nTerminal.ɵfac = function Terminal_Factory(t) {\n  return new (t || Terminal)(i0.ɵɵdirectiveInject(i0.ElementRef), i0.ɵɵdirectiveInject(TerminalService), i0.ɵɵdirectiveInject(i0.ChangeDetectorRef));\n};\n\nTerminal.ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n  type: Terminal,\n  selectors: [[\"p-terminal\"]],\n  hostAttrs: [1, \"p-element\"],\n  inputs: {\n    welcomeMessage: \"welcomeMessage\",\n    prompt: \"prompt\",\n    style: \"style\",\n    styleClass: \"styleClass\",\n    response: \"response\"\n  },\n  decls: 9,\n  vars: 8,\n  consts: [[3, \"ngClass\", \"ngStyle\", \"click\"], [4, \"ngIf\"], [1, \"p-terminal-content\"], [4, \"ngFor\", \"ngForOf\"], [1, \"p-terminal-prompt-container\"], [1, \"p-terminal-content-prompt\"], [\"type\", \"text\", \"autocomplete\", \"off\", \"autofocus\", \"\", 1, \"p-terminal-input\", 3, \"ngModel\", \"ngModelChange\", \"keydown\"], [\"in\", \"\"], [1, \"p-terminal-prompt\"], [1, \"p-terminal-command\"], [1, \"p-terminal-response\"]],\n  template: function Terminal_Template(rf, ctx) {\n    if (rf & 1) {\n      const _r4 = i0.ɵɵgetCurrentView();\n\n      i0.ɵɵelementStart(0, \"div\", 0);\n      i0.ɵɵlistener(\"click\", function Terminal_Template_div_click_0_listener() {\n        i0.ɵɵrestoreView(_r4);\n\n        const _r2 = i0.ɵɵreference(8);\n\n        return ctx.focus(_r2);\n      });\n      i0.ɵɵtemplate(1, Terminal_div_1_Template, 2, 1, \"div\", 1);\n      i0.ɵɵelementStart(2, \"div\", 2);\n      i0.ɵɵtemplate(3, Terminal_div_3_Template, 7, 3, \"div\", 3);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(4, \"div\", 4);\n      i0.ɵɵelementStart(5, \"span\", 5);\n      i0.ɵɵtext(6);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(7, \"input\", 6, 7);\n      i0.ɵɵlistener(\"ngModelChange\", function Terminal_Template_input_ngModelChange_7_listener($event) {\n        return ctx.command = $event;\n      })(\"keydown\", function Terminal_Template_input_keydown_7_listener($event) {\n        return ctx.handleCommand($event);\n      });\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementEnd();\n    }\n\n    if (rf & 2) {\n      i0.ɵɵclassMap(ctx.styleClass);\n      i0.ɵɵproperty(\"ngClass\", \"p-terminal p-component\")(\"ngStyle\", ctx.style);\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngIf\", ctx.welcomeMessage);\n      i0.ɵɵadvance(2);\n      i0.ɵɵproperty(\"ngForOf\", ctx.commands);\n      i0.ɵɵadvance(3);\n      i0.ɵɵtextInterpolate(ctx.prompt);\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngModel\", ctx.command);\n    }\n  },\n  directives: [i2.NgClass, i2.NgStyle, i2.NgIf, i2.NgForOf, i3.DefaultValueAccessor, i3.NgControlStatus, i3.NgModel],\n  styles: [\".p-terminal{height:18rem;overflow:auto}.p-terminal-prompt-container{display:flex;align-items:center}.p-terminal-input{flex:1 1 auto;border:0;background-color:transparent;color:inherit;padding:0;outline:0 none}.p-terminal-input::-ms-clear{display:none}\"],\n  encapsulation: 2,\n  changeDetection: 0\n});\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(Terminal, [{\n    type: Component,\n    args: [{\n      selector: 'p-terminal',\n      template: `\n        <div [ngClass]=\"'p-terminal p-component'\" [ngStyle]=\"style\" [class]=\"styleClass\" (click)=\"focus(in)\">\n            <div *ngIf=\"welcomeMessage\">{{welcomeMessage}}</div>\n            <div class=\"p-terminal-content\">\n                <div *ngFor=\"let command of commands\">\n                    <span class=\"p-terminal-prompt\">{{prompt}}</span>\n                    <span class=\"p-terminal-command\">{{command.text}}</span>\n                    <div class=\"p-terminal-response\">{{command.response}}</div>\n                </div>\n            </div>\n            <div class=\"p-terminal-prompt-container\">\n                <span class=\"p-terminal-content-prompt\">{{prompt}}</span>\n                <input #in type=\"text\" [(ngModel)]=\"command\" class=\"p-terminal-input\" autocomplete=\"off\" (keydown)=\"handleCommand($event)\" autofocus>\n            </div>\n        </div>\n    `,\n      changeDetection: ChangeDetectionStrategy.OnPush,\n      encapsulation: ViewEncapsulation.None,\n      styleUrls: ['./terminal.css'],\n      host: {\n        'class': 'p-element'\n      }\n    }]\n  }], function () {\n    return [{\n      type: i0.ElementRef\n    }, {\n      type: TerminalService\n    }, {\n      type: i0.ChangeDetectorRef\n    }];\n  }, {\n    welcomeMessage: [{\n      type: Input\n    }],\n    prompt: [{\n      type: Input\n    }],\n    style: [{\n      type: Input\n    }],\n    styleClass: [{\n      type: Input\n    }],\n    response: [{\n      type: Input\n    }]\n  });\n})();\n\nclass TerminalModule {}\n\nTerminalModule.ɵfac = function TerminalModule_Factory(t) {\n  return new (t || TerminalModule)();\n};\n\nTerminalModule.ɵmod = /* @__PURE__ */i0.ɵɵdefineNgModule({\n  type: TerminalModule\n});\nTerminalModule.ɵinj = /* @__PURE__ */i0.ɵɵdefineInjector({\n  imports: [[CommonModule, FormsModule]]\n});\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(TerminalModule, [{\n    type: NgModule,\n    args: [{\n      imports: [CommonModule, FormsModule],\n      exports: [Terminal],\n      declarations: [Terminal]\n    }]\n  }], null, null);\n})();\n/**\n * Generated bundle index. Do not edit.\n */\n\n\nexport { Terminal, TerminalModule, TerminalService }; //# sourceMappingURL=primeng-terminal.js.map","map":{"version":3,"sources":["/Users/fazozela/Desktop/ProyectoTecba/TecbaUserProjectV1/node_modules/primeng/fesm2015/primeng-terminal.js"],"names":["i0","Injectable","Component","ChangeDetectionStrategy","ViewEncapsulation","Input","NgModule","i3","FormsModule","i2","CommonModule","DomHandler","Subject","TerminalService","constructor","commandSource","responseSource","commandHandler","asObservable","responseHandler","sendCommand","command","next","sendResponse","response","ɵfac","ɵprov","type","Terminal","el","terminalService","cd","commands","subscription","subscribe","length","commandProcessed","ngAfterViewInit","container","find","nativeElement","ngAfterViewChecked","scrollTop","scrollHeight","value","handleCommand","event","keyCode","push","text","focus","element","ngOnDestroy","unsubscribe","ElementRef","ChangeDetectorRef","ɵcmp","NgClass","NgStyle","NgIf","NgForOf","DefaultValueAccessor","NgControlStatus","NgModel","args","selector","template","changeDetection","OnPush","encapsulation","None","styleUrls","host","welcomeMessage","prompt","style","styleClass","TerminalModule","ɵmod","ɵinj","imports","exports","declarations"],"mappings":"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","sourcesContent":["import * as i0 from '@angular/core';\nimport { Injectable, Component, ChangeDetectionStrategy, ViewEncapsulation, Input, NgModule } from '@angular/core';\nimport * as i3 from '@angular/forms';\nimport { FormsModule } from '@angular/forms';\nimport * as i2 from '@angular/common';\nimport { CommonModule } from '@angular/common';\nimport { DomHandler } from 'primeng/dom';\nimport { Subject } from 'rxjs';\n\nclass TerminalService {\n    constructor() {\n        this.commandSource = new Subject();\n        this.responseSource = new Subject();\n        this.commandHandler = this.commandSource.asObservable();\n        this.responseHandler = this.responseSource.asObservable();\n    }\n    sendCommand(command) {\n        if (command) {\n            this.commandSource.next(command);\n        }\n    }\n    sendResponse(response) {\n        if (response) {\n            this.responseSource.next(response);\n        }\n    }\n}\nTerminalService.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"12.0.5\", ngImport: i0, type: TerminalService, deps: [], target: i0.ɵɵFactoryTarget.Injectable });\nTerminalService.ɵprov = i0.ɵɵngDeclareInjectable({ minVersion: \"12.0.0\", version: \"12.0.5\", ngImport: i0, type: TerminalService });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"12.0.5\", ngImport: i0, type: TerminalService, decorators: [{\n            type: Injectable\n        }] });\n\nclass Terminal {\n    constructor(el, terminalService, cd) {\n        this.el = el;\n        this.terminalService = terminalService;\n        this.cd = cd;\n        this.commands = [];\n        this.subscription = terminalService.responseHandler.subscribe(response => {\n            this.commands[this.commands.length - 1].response = response;\n            this.commandProcessed = true;\n        });\n    }\n    ngAfterViewInit() {\n        this.container = DomHandler.find(this.el.nativeElement, '.p-terminal')[0];\n    }\n    ngAfterViewChecked() {\n        if (this.commandProcessed) {\n            this.container.scrollTop = this.container.scrollHeight;\n            this.commandProcessed = false;\n        }\n    }\n    set response(value) {\n        if (value) {\n            this.commands[this.commands.length - 1].response = value;\n            this.commandProcessed = true;\n        }\n    }\n    handleCommand(event) {\n        if (event.keyCode == 13) {\n            this.commands.push({ text: this.command });\n            this.terminalService.sendCommand(this.command);\n            this.command = '';\n        }\n    }\n    focus(element) {\n        element.focus();\n    }\n    ngOnDestroy() {\n        if (this.subscription) {\n            this.subscription.unsubscribe();\n        }\n    }\n}\nTerminal.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"12.0.5\", ngImport: i0, type: Terminal, deps: [{ token: i0.ElementRef }, { token: TerminalService }, { token: i0.ChangeDetectorRef }], target: i0.ɵɵFactoryTarget.Component });\nTerminal.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"12.0.0\", version: \"12.0.5\", type: Terminal, selector: \"p-terminal\", inputs: { welcomeMessage: \"welcomeMessage\", prompt: \"prompt\", style: \"style\", styleClass: \"styleClass\", response: \"response\" }, host: { classAttribute: \"p-element\" }, ngImport: i0, template: `\n        <div [ngClass]=\"'p-terminal p-component'\" [ngStyle]=\"style\" [class]=\"styleClass\" (click)=\"focus(in)\">\n            <div *ngIf=\"welcomeMessage\">{{welcomeMessage}}</div>\n            <div class=\"p-terminal-content\">\n                <div *ngFor=\"let command of commands\">\n                    <span class=\"p-terminal-prompt\">{{prompt}}</span>\n                    <span class=\"p-terminal-command\">{{command.text}}</span>\n                    <div class=\"p-terminal-response\">{{command.response}}</div>\n                </div>\n            </div>\n            <div class=\"p-terminal-prompt-container\">\n                <span class=\"p-terminal-content-prompt\">{{prompt}}</span>\n                <input #in type=\"text\" [(ngModel)]=\"command\" class=\"p-terminal-input\" autocomplete=\"off\" (keydown)=\"handleCommand($event)\" autofocus>\n            </div>\n        </div>\n    `, isInline: true, styles: [\".p-terminal{height:18rem;overflow:auto}.p-terminal-prompt-container{display:flex;align-items:center}.p-terminal-input{flex:1 1 auto;border:0;background-color:transparent;color:inherit;padding:0;outline:0 none}.p-terminal-input::-ms-clear{display:none}\"], directives: [{ type: i2.NgClass, selector: \"[ngClass]\", inputs: [\"class\", \"ngClass\"] }, { type: i2.NgStyle, selector: \"[ngStyle]\", inputs: [\"ngStyle\"] }, { type: i2.NgIf, selector: \"[ngIf]\", inputs: [\"ngIf\", \"ngIfThen\", \"ngIfElse\"] }, { type: i2.NgForOf, selector: \"[ngFor][ngForOf]\", inputs: [\"ngForOf\", \"ngForTrackBy\", \"ngForTemplate\"] }, { type: i3.DefaultValueAccessor, selector: \"input:not([type=checkbox])[formControlName],textarea[formControlName],input:not([type=checkbox])[formControl],textarea[formControl],input:not([type=checkbox])[ngModel],textarea[ngModel],[ngDefaultControl]\" }, { type: i3.NgControlStatus, selector: \"[formControlName],[ngModel],[formControl]\" }, { type: i3.NgModel, selector: \"[ngModel]:not([formControlName]):not([formControl])\", inputs: [\"name\", \"disabled\", \"ngModel\", \"ngModelOptions\"], outputs: [\"ngModelChange\"], exportAs: [\"ngModel\"] }], changeDetection: i0.ChangeDetectionStrategy.OnPush, encapsulation: i0.ViewEncapsulation.None });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"12.0.5\", ngImport: i0, type: Terminal, decorators: [{\n            type: Component,\n            args: [{\n                    selector: 'p-terminal',\n                    template: `\n        <div [ngClass]=\"'p-terminal p-component'\" [ngStyle]=\"style\" [class]=\"styleClass\" (click)=\"focus(in)\">\n            <div *ngIf=\"welcomeMessage\">{{welcomeMessage}}</div>\n            <div class=\"p-terminal-content\">\n                <div *ngFor=\"let command of commands\">\n                    <span class=\"p-terminal-prompt\">{{prompt}}</span>\n                    <span class=\"p-terminal-command\">{{command.text}}</span>\n                    <div class=\"p-terminal-response\">{{command.response}}</div>\n                </div>\n            </div>\n            <div class=\"p-terminal-prompt-container\">\n                <span class=\"p-terminal-content-prompt\">{{prompt}}</span>\n                <input #in type=\"text\" [(ngModel)]=\"command\" class=\"p-terminal-input\" autocomplete=\"off\" (keydown)=\"handleCommand($event)\" autofocus>\n            </div>\n        </div>\n    `,\n                    changeDetection: ChangeDetectionStrategy.OnPush,\n                    encapsulation: ViewEncapsulation.None,\n                    styleUrls: ['./terminal.css'],\n                    host: {\n                        'class': 'p-element'\n                    }\n                }]\n        }], ctorParameters: function () { return [{ type: i0.ElementRef }, { type: TerminalService }, { type: i0.ChangeDetectorRef }]; }, propDecorators: { welcomeMessage: [{\n                type: Input\n            }], prompt: [{\n                type: Input\n            }], style: [{\n                type: Input\n            }], styleClass: [{\n                type: Input\n            }], response: [{\n                type: Input\n            }] } });\nclass TerminalModule {\n}\nTerminalModule.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"12.0.5\", ngImport: i0, type: TerminalModule, deps: [], target: i0.ɵɵFactoryTarget.NgModule });\nTerminalModule.ɵmod = i0.ɵɵngDeclareNgModule({ minVersion: \"12.0.0\", version: \"12.0.5\", ngImport: i0, type: TerminalModule, declarations: [Terminal], imports: [CommonModule, FormsModule], exports: [Terminal] });\nTerminalModule.ɵinj = i0.ɵɵngDeclareInjector({ minVersion: \"12.0.0\", version: \"12.0.5\", ngImport: i0, type: TerminalModule, imports: [[CommonModule, FormsModule]] });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"12.0.5\", ngImport: i0, type: TerminalModule, decorators: [{\n            type: NgModule,\n            args: [{\n                    imports: [CommonModule, FormsModule],\n                    exports: [Terminal],\n                    declarations: [Terminal]\n                }]\n        }] });\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { Terminal, TerminalModule, TerminalService };\n//# sourceMappingURL=primeng-terminal.js.map\n"]},"metadata":{},"sourceType":"module"}