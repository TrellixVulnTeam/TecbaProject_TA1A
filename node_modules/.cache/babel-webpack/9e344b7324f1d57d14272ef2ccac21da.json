{"ast":null,"code":"import * as i0 from '@angular/core';\nimport { forwardRef, EventEmitter, Component, ChangeDetectionStrategy, ViewEncapsulation, Input, Output, NgModule } from '@angular/core';\nimport * as i1 from '@angular/common';\nimport { CommonModule } from '@angular/common';\nimport { NG_VALUE_ACCESSOR } from '@angular/forms';\n\nconst _c0 = function (a1, a2, a3) {\n  return {\n    \"p-inputswitch p-component\": true,\n    \"p-inputswitch-checked\": a1,\n    \"p-disabled\": a2,\n    \"p-focus\": a3\n  };\n};\n\nconst INPUTSWITCH_VALUE_ACCESSOR = {\n  provide: NG_VALUE_ACCESSOR,\n  useExisting: forwardRef(() => InputSwitch),\n  multi: true\n};\n\nclass InputSwitch {\n  constructor(cd) {\n    this.cd = cd;\n    this.onChange = new EventEmitter();\n    this.checked = false;\n    this.focused = false;\n\n    this.onModelChange = () => {};\n\n    this.onModelTouched = () => {};\n  }\n\n  onClick(event, cb) {\n    if (!this.disabled && !this.readonly) {\n      event.preventDefault();\n      this.toggle(event);\n      cb.focus();\n    }\n  }\n\n  onInputChange(event) {\n    if (!this.readonly) {\n      const inputChecked = event.target.checked;\n      this.updateModel(event, inputChecked);\n    }\n  }\n\n  toggle(event) {\n    this.updateModel(event, !this.checked);\n  }\n\n  updateModel(event, value) {\n    this.checked = value;\n    this.onModelChange(this.checked);\n    this.onChange.emit({\n      originalEvent: event,\n      checked: this.checked\n    });\n  }\n\n  onFocus(event) {\n    this.focused = true;\n  }\n\n  onBlur(event) {\n    this.focused = false;\n    this.onModelTouched();\n  }\n\n  writeValue(checked) {\n    this.checked = checked;\n    this.cd.markForCheck();\n  }\n\n  registerOnChange(fn) {\n    this.onModelChange = fn;\n  }\n\n  registerOnTouched(fn) {\n    this.onModelTouched = fn;\n  }\n\n  setDisabledState(val) {\n    this.disabled = val;\n    this.cd.markForCheck();\n  }\n\n}\n\nInputSwitch.ɵfac = function InputSwitch_Factory(t) {\n  return new (t || InputSwitch)(i0.ɵɵdirectiveInject(i0.ChangeDetectorRef));\n};\n\nInputSwitch.ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n  type: InputSwitch,\n  selectors: [[\"p-inputSwitch\"]],\n  inputs: {\n    style: \"style\",\n    styleClass: \"styleClass\",\n    tabindex: \"tabindex\",\n    inputId: \"inputId\",\n    name: \"name\",\n    disabled: \"disabled\",\n    readonly: \"readonly\",\n    ariaLabelledBy: \"ariaLabelledBy\"\n  },\n  outputs: {\n    onChange: \"onChange\"\n  },\n  features: [i0.ɵɵProvidersFeature([INPUTSWITCH_VALUE_ACCESSOR])],\n  decls: 5,\n  vars: 15,\n  consts: [[3, \"ngClass\", \"ngStyle\", \"click\"], [1, \"p-hidden-accessible\"], [\"type\", \"checkbox\", \"role\", \"switch\", 3, \"checked\", \"disabled\", \"change\", \"focus\", \"blur\"], [\"cb\", \"\"], [1, \"p-inputswitch-slider\"]],\n  template: function InputSwitch_Template(rf, ctx) {\n    if (rf & 1) {\n      const _r1 = i0.ɵɵgetCurrentView();\n\n      i0.ɵɵelementStart(0, \"div\", 0);\n      i0.ɵɵlistener(\"click\", function InputSwitch_Template_div_click_0_listener($event) {\n        i0.ɵɵrestoreView(_r1);\n\n        const _r0 = i0.ɵɵreference(3);\n\n        return ctx.onClick($event, _r0);\n      });\n      i0.ɵɵelementStart(1, \"div\", 1);\n      i0.ɵɵelementStart(2, \"input\", 2, 3);\n      i0.ɵɵlistener(\"change\", function InputSwitch_Template_input_change_2_listener($event) {\n        return ctx.onInputChange($event);\n      })(\"focus\", function InputSwitch_Template_input_focus_2_listener($event) {\n        return ctx.onFocus($event);\n      })(\"blur\", function InputSwitch_Template_input_blur_2_listener($event) {\n        return ctx.onBlur($event);\n      });\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(4, \"span\", 4);\n      i0.ɵɵelementEnd();\n    }\n\n    if (rf & 2) {\n      i0.ɵɵclassMap(ctx.styleClass);\n      i0.ɵɵproperty(\"ngClass\", i0.ɵɵpureFunction3(11, _c0, ctx.checked, ctx.disabled, ctx.focused))(\"ngStyle\", ctx.style);\n      i0.ɵɵadvance(2);\n      i0.ɵɵproperty(\"checked\", ctx.checked)(\"disabled\", ctx.disabled);\n      i0.ɵɵattribute(\"id\", ctx.inputId)(\"name\", ctx.name)(\"tabindex\", ctx.tabindex)(\"aria-checked\", ctx.checked)(\"aria-labelledby\", ctx.ariaLabelledBy);\n    }\n  },\n  directives: [i1.NgClass, i1.NgStyle],\n  styles: [\".p-inputswitch{position:relative;display:inline-block;-webkit-user-select:none;-ms-user-select:none;user-select:none}.p-inputswitch-slider{position:absolute;cursor:pointer;top:0;left:0;right:0;bottom:0}.p-inputswitch-slider:before{position:absolute;content:\\\"\\\";top:50%}\"],\n  encapsulation: 2,\n  changeDetection: 0\n});\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(InputSwitch, [{\n    type: Component,\n    args: [{\n      selector: 'p-inputSwitch',\n      template: `\n        <div [ngClass]=\"{'p-inputswitch p-component': true, 'p-inputswitch-checked': checked, 'p-disabled': disabled, 'p-focus': focused}\" \n            [ngStyle]=\"style\" [class]=\"styleClass\" (click)=\"onClick($event, cb)\">\n            <div class=\"p-hidden-accessible\">\n                <input #cb type=\"checkbox\" [attr.id]=\"inputId\" [attr.name]=\"name\" [attr.tabindex]=\"tabindex\" [checked]=\"checked\" (change)=\"onInputChange($event)\"\n                    (focus)=\"onFocus($event)\" (blur)=\"onBlur($event)\" [disabled]=\"disabled\" role=\"switch\" [attr.aria-checked]=\"checked\" [attr.aria-labelledby]=\"ariaLabelledBy\"/>\n            </div>\n            <span class=\"p-inputswitch-slider\"></span>\n        </div>\n    `,\n      providers: [INPUTSWITCH_VALUE_ACCESSOR],\n      changeDetection: ChangeDetectionStrategy.OnPush,\n      encapsulation: ViewEncapsulation.None,\n      styleUrls: ['./inputswitch.css']\n    }]\n  }], function () {\n    return [{\n      type: i0.ChangeDetectorRef\n    }];\n  }, {\n    style: [{\n      type: Input\n    }],\n    styleClass: [{\n      type: Input\n    }],\n    tabindex: [{\n      type: Input\n    }],\n    inputId: [{\n      type: Input\n    }],\n    name: [{\n      type: Input\n    }],\n    disabled: [{\n      type: Input\n    }],\n    readonly: [{\n      type: Input\n    }],\n    ariaLabelledBy: [{\n      type: Input\n    }],\n    onChange: [{\n      type: Output\n    }]\n  });\n})();\n\nclass InputSwitchModule {}\n\nInputSwitchModule.ɵfac = function InputSwitchModule_Factory(t) {\n  return new (t || InputSwitchModule)();\n};\n\nInputSwitchModule.ɵmod = /* @__PURE__ */i0.ɵɵdefineNgModule({\n  type: InputSwitchModule\n});\nInputSwitchModule.ɵinj = /* @__PURE__ */i0.ɵɵdefineInjector({\n  imports: [[CommonModule]]\n});\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(InputSwitchModule, [{\n    type: NgModule,\n    args: [{\n      imports: [CommonModule],\n      exports: [InputSwitch],\n      declarations: [InputSwitch]\n    }]\n  }], null, null);\n})();\n/**\n * Generated bundle index. Do not edit.\n */\n\n\nexport { INPUTSWITCH_VALUE_ACCESSOR, InputSwitch, InputSwitchModule }; //# sourceMappingURL=primeng-inputswitch.js.map","map":{"version":3,"sources":["/Users/fazozela/Desktop/ProyectoTecba/TecbaUserProjectV1/node_modules/primeng/fesm2015/primeng-inputswitch.js"],"names":["i0","forwardRef","EventEmitter","Component","ChangeDetectionStrategy","ViewEncapsulation","Input","Output","NgModule","i1","CommonModule","NG_VALUE_ACCESSOR","INPUTSWITCH_VALUE_ACCESSOR","provide","useExisting","InputSwitch","multi","constructor","cd","onChange","checked","focused","onModelChange","onModelTouched","onClick","event","cb","disabled","readonly","preventDefault","toggle","focus","onInputChange","inputChecked","target","updateModel","value","emit","originalEvent","onFocus","onBlur","writeValue","markForCheck","registerOnChange","fn","registerOnTouched","setDisabledState","val","ɵfac","ChangeDetectorRef","ɵcmp","NgClass","NgStyle","type","args","selector","template","providers","changeDetection","OnPush","encapsulation","None","styleUrls","style","styleClass","tabindex","inputId","name","ariaLabelledBy","InputSwitchModule","ɵmod","ɵinj","imports","exports","declarations"],"mappings":"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","sourcesContent":["import * as i0 from '@angular/core';\nimport { forwardRef, EventEmitter, Component, ChangeDetectionStrategy, ViewEncapsulation, Input, Output, NgModule } from '@angular/core';\nimport * as i1 from '@angular/common';\nimport { CommonModule } from '@angular/common';\nimport { NG_VALUE_ACCESSOR } from '@angular/forms';\n\nconst INPUTSWITCH_VALUE_ACCESSOR = {\n    provide: NG_VALUE_ACCESSOR,\n    useExisting: forwardRef(() => InputSwitch),\n    multi: true\n};\nclass InputSwitch {\n    constructor(cd) {\n        this.cd = cd;\n        this.onChange = new EventEmitter();\n        this.checked = false;\n        this.focused = false;\n        this.onModelChange = () => { };\n        this.onModelTouched = () => { };\n    }\n    onClick(event, cb) {\n        if (!this.disabled && !this.readonly) {\n            event.preventDefault();\n            this.toggle(event);\n            cb.focus();\n        }\n    }\n    onInputChange(event) {\n        if (!this.readonly) {\n            const inputChecked = event.target.checked;\n            this.updateModel(event, inputChecked);\n        }\n    }\n    toggle(event) {\n        this.updateModel(event, !this.checked);\n    }\n    updateModel(event, value) {\n        this.checked = value;\n        this.onModelChange(this.checked);\n        this.onChange.emit({\n            originalEvent: event,\n            checked: this.checked\n        });\n    }\n    onFocus(event) {\n        this.focused = true;\n    }\n    onBlur(event) {\n        this.focused = false;\n        this.onModelTouched();\n    }\n    writeValue(checked) {\n        this.checked = checked;\n        this.cd.markForCheck();\n    }\n    registerOnChange(fn) {\n        this.onModelChange = fn;\n    }\n    registerOnTouched(fn) {\n        this.onModelTouched = fn;\n    }\n    setDisabledState(val) {\n        this.disabled = val;\n        this.cd.markForCheck();\n    }\n}\nInputSwitch.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"12.0.5\", ngImport: i0, type: InputSwitch, deps: [{ token: i0.ChangeDetectorRef }], target: i0.ɵɵFactoryTarget.Component });\nInputSwitch.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"12.0.0\", version: \"12.0.5\", type: InputSwitch, selector: \"p-inputSwitch\", inputs: { style: \"style\", styleClass: \"styleClass\", tabindex: \"tabindex\", inputId: \"inputId\", name: \"name\", disabled: \"disabled\", readonly: \"readonly\", ariaLabelledBy: \"ariaLabelledBy\" }, outputs: { onChange: \"onChange\" }, providers: [INPUTSWITCH_VALUE_ACCESSOR], ngImport: i0, template: `\n        <div [ngClass]=\"{'p-inputswitch p-component': true, 'p-inputswitch-checked': checked, 'p-disabled': disabled, 'p-focus': focused}\" \n            [ngStyle]=\"style\" [class]=\"styleClass\" (click)=\"onClick($event, cb)\">\n            <div class=\"p-hidden-accessible\">\n                <input #cb type=\"checkbox\" [attr.id]=\"inputId\" [attr.name]=\"name\" [attr.tabindex]=\"tabindex\" [checked]=\"checked\" (change)=\"onInputChange($event)\"\n                    (focus)=\"onFocus($event)\" (blur)=\"onBlur($event)\" [disabled]=\"disabled\" role=\"switch\" [attr.aria-checked]=\"checked\" [attr.aria-labelledby]=\"ariaLabelledBy\"/>\n            </div>\n            <span class=\"p-inputswitch-slider\"></span>\n        </div>\n    `, isInline: true, styles: [\".p-inputswitch{position:relative;display:inline-block;-webkit-user-select:none;-ms-user-select:none;user-select:none}.p-inputswitch-slider{position:absolute;cursor:pointer;top:0;left:0;right:0;bottom:0}.p-inputswitch-slider:before{position:absolute;content:\\\"\\\";top:50%}\"], directives: [{ type: i1.NgClass, selector: \"[ngClass]\", inputs: [\"class\", \"ngClass\"] }, { type: i1.NgStyle, selector: \"[ngStyle]\", inputs: [\"ngStyle\"] }], changeDetection: i0.ChangeDetectionStrategy.OnPush, encapsulation: i0.ViewEncapsulation.None });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"12.0.5\", ngImport: i0, type: InputSwitch, decorators: [{\n            type: Component,\n            args: [{\n                    selector: 'p-inputSwitch',\n                    template: `\n        <div [ngClass]=\"{'p-inputswitch p-component': true, 'p-inputswitch-checked': checked, 'p-disabled': disabled, 'p-focus': focused}\" \n            [ngStyle]=\"style\" [class]=\"styleClass\" (click)=\"onClick($event, cb)\">\n            <div class=\"p-hidden-accessible\">\n                <input #cb type=\"checkbox\" [attr.id]=\"inputId\" [attr.name]=\"name\" [attr.tabindex]=\"tabindex\" [checked]=\"checked\" (change)=\"onInputChange($event)\"\n                    (focus)=\"onFocus($event)\" (blur)=\"onBlur($event)\" [disabled]=\"disabled\" role=\"switch\" [attr.aria-checked]=\"checked\" [attr.aria-labelledby]=\"ariaLabelledBy\"/>\n            </div>\n            <span class=\"p-inputswitch-slider\"></span>\n        </div>\n    `,\n                    providers: [INPUTSWITCH_VALUE_ACCESSOR],\n                    changeDetection: ChangeDetectionStrategy.OnPush,\n                    encapsulation: ViewEncapsulation.None,\n                    styleUrls: ['./inputswitch.css']\n                }]\n        }], ctorParameters: function () { return [{ type: i0.ChangeDetectorRef }]; }, propDecorators: { style: [{\n                type: Input\n            }], styleClass: [{\n                type: Input\n            }], tabindex: [{\n                type: Input\n            }], inputId: [{\n                type: Input\n            }], name: [{\n                type: Input\n            }], disabled: [{\n                type: Input\n            }], readonly: [{\n                type: Input\n            }], ariaLabelledBy: [{\n                type: Input\n            }], onChange: [{\n                type: Output\n            }] } });\nclass InputSwitchModule {\n}\nInputSwitchModule.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"12.0.5\", ngImport: i0, type: InputSwitchModule, deps: [], target: i0.ɵɵFactoryTarget.NgModule });\nInputSwitchModule.ɵmod = i0.ɵɵngDeclareNgModule({ minVersion: \"12.0.0\", version: \"12.0.5\", ngImport: i0, type: InputSwitchModule, declarations: [InputSwitch], imports: [CommonModule], exports: [InputSwitch] });\nInputSwitchModule.ɵinj = i0.ɵɵngDeclareInjector({ minVersion: \"12.0.0\", version: \"12.0.5\", ngImport: i0, type: InputSwitchModule, imports: [[CommonModule]] });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"12.0.5\", ngImport: i0, type: InputSwitchModule, decorators: [{\n            type: NgModule,\n            args: [{\n                    imports: [CommonModule],\n                    exports: [InputSwitch],\n                    declarations: [InputSwitch]\n                }]\n        }] });\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { INPUTSWITCH_VALUE_ACCESSOR, InputSwitch, InputSwitchModule };\n//# sourceMappingURL=primeng-inputswitch.js.map\n"]},"metadata":{},"sourceType":"module"}